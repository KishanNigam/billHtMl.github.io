echo Started RUN_ MultiCheckSS.bat 
@ECHO OFF

REM Assign Rearrange Format Parameter.
REM The acceptable rearrange format is APSS.
REM Assign SELECTED Source Directory and Source File parameters to variables.
REM Assign the environment name argument to variable. The environment passed includes the environment variable, i.e. whether test or prod.
REM This is done to keep the batch file in sync with the VisualCron job and
REM allow the job to pass environment value to the batch file, irrespective of the environment.

SET environment=%1
echo The environment is [%environment%].
SET server=%2
echo The server is [%server%].
SET RRNGFMT=APSS
echo Rearrange format is [%RRNGFMT%].
SET sourcedir=%3
echo The source directory is [%sourcedir%].
SET sourcefile=%4
echo The source file is [%sourcefile%].
SET RRNGDIR=%5
echo The rearrange directory is [%RRNGDIR%].
SET RRNGFILE=%6
echo The rearrange file name is [%RRNGFILE%].
echo .

REM Date Variable Definition
FOR /F "TOKENS=1* DELIMS= " %%A IN ('DATE/T') DO SET CDATE=%%B 
For /f "tokens=2-4 delims=/ " %%a in ('date /t') do (set date=%%a%%b%%c)


set year=%date:~4,4%
set month=%date:~0,2%
set yearmonth=%year%%month%
SET day=%date:~2,2%
echo day=%day%
SET hour=%time:~0,2%
echo hour=%hour%
IF "%hour:~0,1%" == " " SET hour=0%hour:~1,1%
echo hour=%hour%
SET minute=%time:~3,2%
SET filetimestamp=%year%%month%%day%_%hour%%minute%
echo filetimestamp=%filetimestamp%

if %environment%==PROD (
     SET sourcedir="\\nicoeas10\EAS\SGImports\MULTICHECKUPLOAD-SS\"
     SET archivedir="\\nicoad\nico\Finance\EAS\Archive\SGImports\MULTICHECKUPLOAD-SS"	 
   )
if %environment%==TEST (
    SET sourcedir="\\nicoeas12\EAS\SGImports\MULTICHECKUPLOAD-SS\"
    SET archivedir="\\nicoad\nico\Finance\EASTest\Archive\SGImports\MULTICHECKUPLOAD-SS"
	
   )
if %environment%==UAT (
    SET sourcedir="\\nicoeas14\EAS\SGImports\MULTICHECKUPLOAD-SS\"
    SET archivedir="\\nicoad\nico\Finance\EASUAT\Archive\SGImports\MULTICHECKUPLOAD-SS"
)


REM DECLARE VARIABLES
REM sourcefile variable is assigned from first parameter passed in.
SET logdir="\\%server%\server\custom\log\MultiCheckSS"
REM SET sourcedir=D:\EAS\Server\log\
SET sourcefile=*_MultiCheckUpload_SS_*.dat

REM DECLARE REARRANGE VARIABLES
SET RRNGDATA=%RRNGDIR%%RRNGFILE%

REM Create the log directory if it does not exist.
SET LogDir=%logdir%\%year%
IF NOT EXIST %LogDir%\NUL MKDIR %LogDir%
SET LogDir=%LogDir%\%yearmonth%
IF NOT EXIST %LogDir%\NUL MKDIR %LogDir%
SET logfilename=%LogDir%\MultiCheck_SS_%filetimestamp%.log
echo The logfilename is [%logfilename%].

echo +++++++++++++++++++++++++++++++++++++++++ >>%logfilename%
echo .                                         >>%logfilename%
echo Start time %date% %time%                  >>%logfilename%
echo User [%username%]                         >>%logfilename%
echo .                                         >>%logfilename%

echo environment = [%environment%].            >>%logfilename%
echo server = [%server%].                      >>%logfilename%
echo archivedir = [%archivedir%].              >>%logfilename%
echo logdir = [%logdir%].                      >>%logfilename%
echo RRNGDATA = [%RRNGDATA%].                  >>%logfilename%
echo RRNGDIR = [%RRNGDIR%].                    >>%logfilename%
echo RRNGFILE = [%RRNGFILE%].                  >>%logfilename%
echo sourcedir = [%sourcedir%].                >>%logfilename%
echo sourcefile = [%sourcefile%].              >>%logfilename%
echo RRNGFMT = [%RRNGFMT%].                    >>%logfilename%
echo .                                         >>%logfilename%

echo Checking to see if [%sourcedir%%sourcefile%] source file exist.          >>%logfilename%
echo If the source file does not exist, batch file will end.                  >>%logfilename%
IF NOT EXIST %sourcedir%%sourcefile% (
   echo The [%sourcedir%%sourcefile%] source file does not exist.             >>%logfilename%
   echo THE [%sourcedir%%sourcefile%] SOURCE FILE DOES NOT EXIST!!!
   echo .                                                                     >>%logfilename%
   GOTO END
)

REM Delete the rearrange file if it exists.
echo Deleting the [%RRNGDATA%] rearrange file if it exists.                                                 >>%logfilename%
echo Executing [DEL %RRNGDATA%].   																			>>%logfilename%
IF EXIST %RRNGDATA% (
   echo Deleting existing [%RRNGDATA%] rearrange file.                                                      >>%logfilename%
   DEL %RRNGDATA%                                                                                           >>%logfilename%
   echo The [%RRNGDATA%] rearrange file should have been deleted.                                           >>%logfilename%
)                                                                         									
IF EXIST %RRNGDATA% (
   echo [%RRNGDATA%] existing rearrange file still exists!                                                  >>%logfilename%
   echo [%RRNGDATA%] EXISTING REARRANGE FILE WAS NOT DELETED!!!
)
IF NOT EXIST %RRNGDATA% (
   echo The [%RRNGDATA%] rearrange file does not exist.                                                     >>%logfilename%
   echo THE [%RRNGDATA%] REARRANGE FILE DOES NOT EXIST!!!
)
echo . 

REM Archive the source file.
echo Archiving the [%sourcedir%%sourcefile%] file(s).                                                       >>%logfilename%
SET archivedir=%archivedir%\%year%
IF NOT EXIST %archivedir%\NUL MKDIR %archivedir%                                                            >>%logfilename%
SET archivedir=%archivedir%\%yearmonth%
IF NOT EXIST %archivedir%\NUL MKDIR %archivedir%                                                            >>%logfilename%
echo Executing [COPY %sourcedir%%sourcefile% %archivedir%].                                                 >>%logfilename%
IF EXIST %sourcedir%%sourcefile% COPY %sourcedir%%sourcefile% %archivedir%								     >>%logfilename%
echo Finished archiving the [%sourcedir%%sourcefile%] source file.                                          >>%logfilename%
echo .                                                                                                      >>%logfilename%

REM Move the source file to the rearrange directory.
echo Moving the [%sourcedir%%sourcefile%] file to the [%RRNGDIR%] rearrange directory.                      >>%logfilename%
echo Executing command [MOVE %sourcedir%%sourcefile% %RRNGDIR%].                                            >>%logfilename%
IF EXIST %sourcedir%%sourcefile% MOVE %sourcedir%%sourcefile% %RRNGDIR%                                     >>%logfilename%
echo Finished moving the [%sourcedir%%sourcefile%] to [%RRNGDIR%].                                          >>%logfilename%
echo .  

REM ************************
REM Prep the rearrange file.
REM ************************
echo Prepping the [%RRNGDIR%%sourcefile%] file for import.   %date% %time%                                  >>%logfilename%
echo Renaming the [%RRNGDIR%%sourcefile%] file to [%RRNGFILE%]                                              >>%logfilename%
echo Executing [ren %RRNGDIR%%sourcefile% %RRNGFILE%].                                                      >>%logfilename%
IF EXIST %RRNGDIR%%sourcefile% REN %RRNGDIR%%sourcefile% %RRNGFILE%                                         >>%logfilename%
echo Finished renaming ["%RRNGDIR%%sourcefile%"] to [%RRNGFILE%].                                           >>%logfilename%
echo .                                                                                                      >>%logfilename%


echo Checking to see if [%RRNGDATA%] rearrange file exist.                    >>%logfilename%
echo If the rearrange file does not exist, batch file will end.               >>%logfilename%
IF NOT EXIST %RRNGDATA% (
   echo The [%RRNGDATA%] rearrange file does not exist.                       >>%logfilename%
   echo The [%RRNGDATA%] rearrange file does not exist.  					                     
   GOTO END
)
echo . 

rem --------------------------------------------------------------
rem  SET RRNGFMT=your rearrange format name
rem --------------------------------------------------------------
rem  SET RRNGDATA=your rearrange input data file name

  
echo Starting Rearrange for [%RRNGDATA%]               %date% %time%                                        >>%logfilename%
pushd D:\eas\server\bin
call RRNG -AP
echo Finished Rearrange for [%RRNGDATA%]               %date% %time%                                        >>%logfilename%
echo .                                                                                                      >>%logfilename%


echo Starting Validation for [%RRNGDATA%]              %date% %time%                                        >>%logfilename%


CALL VALDAP.EXE
echo Finished Validation for [%RRNGDATA%]              %date% %time%                                        >>%logfilename%
echo .                                                                                                      >>%logfilename%

:END
echo End time %date% %time%                        >>%logfilename%
echo +++++++++++++++++++++++++++++++++++++++++     >>%logfilename%
echo .                                             >>%logfilename%
echo Finished RUN_ MultiCheckSS.bat                      >>%logfilename%                                                                                
