' Code start
Dim db, rs, JOB_ID, LOCK_SESSION_ID, updateResult, deleteResult

sDate = DatePart("yyyy", Now) 
RPTDATE = sDate
YYEAR= DatePart("yyyy", Now)  
mmno = DatePart("m", Now)
monthno = ZeroFill(mmno,2)
sDate = sDate & monthno   
RPTDATE = RPTDATE & "-" & monthno
ddno = DatePart("d", Now)
dayno = ZeroFill(ddno,2)
sDate = sDate & dayno  
RPTDATE = RPTDATE & "-" & dayno
hrs = DatePart("h", Now)
mns = DatePart("n", Now)
hrno = ZeroFill(hrs,2)
minno = ZeroFill(mns,2)
sDate = sDate & hrno & minno

' Added the logic to read the parameter to get the server and executing environment
IF WScript.Arguments.Count = 0 then
    WScript.Echo "Missing parameters"
    WScript.Quit
END IF
Execserver = Wscript.Arguments.Item(0)
VersionKey = Wscript.Arguments.Item(1)

EASFilePath = "\\" & Execserver & "\server\log\Deployment\Summery_LOCK\SourceDIR\"
LOGFilePath = "\\" & Execserver & "\server\log\Deployment\Summery_LOCK\log\" & YYEAR & "\" & YYEAR & monthno & "\Session_vbs_" & sDate & ".LOG"
set objLOG = createobject("Scripting.FileSystemObject")
set objLOGFile = objLOG.CreateTextfile(LOGFilePath)
objLOGFile.WriteLine("Handle Lock Script started. Source Path: " & EASFilePath & " | Date: " & Date & " " & Time)
objLOGFile.WriteLine("   ")

' Check if the source file exists
If Not CreateObject("Scripting.FileSystemObject").FileExists(EASFilePath & "Session_lock.txt") Then
    objLOGFile.WriteLine("Error: Source file is not available or Source file name is not correct.")
    objLOGFile.Close
    WScript.Quit(1)
End If

' Start Block - Registry value picked according to the current upgrade version from RegistryDtls text file
Const ForReading = 1
Set objFSOReg = CreateObject("Scripting.FileSystemObject")
Set objFileReg = objFSOReg.OpenTextFile( "\\" & Execserver & "\Server\Custom\bin\RegistryDtls.txt", ForReading)
Set keyValues = CreateObject("Scripting.Dictionary")
Do Until objFileReg.AtEndOfStream
    line = objFileReg.ReadLine
    parts = Split(line,"=")
    If UBound(parts) = 1 Then
        key = Trim(parts(0))
        value = Trim(parts(1))
        keyValues(key) = value
    End If
Loop
objFileReg.Close
Val = keyValues(VersionKey)
DBDetails = Split(Val,",")
If UBound(DBDetails) >= 0 Then
    DBServerVal = DBDetails(0)
    DBDBVal = DBDetails(1)
    DBUserVal = DBDetails(2)
    DBPassVal = DBDetails(3)
    DBServer = ReadReg(DBServerVal)
    DBDB = ReadReg(DBDBVal)
    DBUser = ReadReg(DBUserVal)
    DBPass = ReadReg(DBPassVal)
Else
    WScript.Echo "No values in the file to match the upgrade version"
End If
' End Block - Registry value picked according to the current upgrade version from RegistryDtls text file

' Read JOB_ID and LOCK_SESSION_ID from source file
Set objSourceFile = CreateObject("Scripting.FileSystemObject").OpenTextFile(EASFilePath & "Session_lock.txt", ForReading)
Do Until objSourceFile.AtEndOfStream
    line = Trim(objSourceFile.ReadLine)
    If Left(line, 7) = "JOB_ID=" Then
        JOB_ID = Replace(Mid(line, 8), " ", "")
        objLOGFile.WriteLine("JOB_ID fetched: " & JOB_ID)
    ElseIf Left(line, 16) = "LOCK_SESSION_ID=" Then
        LOCK_SESSION_ID = Replace(Mid(line, 17), " ", "")
        objLOGFile.WriteLine("LOCK_SESSION_ID fetched: " & LOCK_SESSION_ID)
    End If
Loop
objSourceFile.Close

' Establish database connection with error handling
On Error Resume Next
sConnect = "Driver={ODBC Driver 17 for SQL Server};Server=" & DBServer & ";Database=" & DBDB & ";Uid=" & DBUser & ";Pwd=" & DBPass & ";ColumnEncryption=Enabled;"
Set db = CreateObject("ADODB.Connection")
db.CommandTimeout = 0
db.Open sConnect
If Err.Number <> 0 Then
    objLOGFile.WriteLine("Error: Database Issue - " & Err.Description)
    objLOGFile.Close
    WScript.Quit(1)
End If
On Error GoTo 0

' Execute update query if JOB_ID has values
If JOB_ID <> "" Then
    objLOGFile.WriteLine("Validating JOB_ID in the database: " & JOB_ID)
    On Error Resume Next
    sQuery = "SELECT COUNT(*) AS RecordCount FROM EAS_JOBS WHERE JOB_ID IN ('" & Replace(JOB_ID, ",", "','") & "')"
    Set rs = db.Execute(sQuery)
    If Err.Number <> 0 Then
        objLOGFile.WriteLine("Error: Database Issue - " & Err.Description)
        objLOGFile.Close
        WScript.Quit(1)
    End If
    On Error GoTo 0
    If Not rs.EOF And rs("RecordCount") > 0 Then
        objLOGFile.WriteLine("JOB_ID(s) exist in the database. Executing update query.")
        sQuery = "UPDATE EAS_JOBS SET STATUS_IND = 300 WHERE JOB_ID IN ('" & Replace(JOB_ID, ",", "','") & "')"
        db.Execute(sQuery)
        objLOGFile.WriteLine("Update query executed successfully.")
    Else
        objLOGFile.WriteLine("Error: JOB_ID(s) are wrong or do not exist!")
    End If
    rs.Close
Else
    objLOGFile.WriteLine("No JOB_ID provided. Skipping update query.")
End If

' Execute delete query if LOCK_SESSION_ID has a value
If LOCK_SESSION_ID <> "" Then
    objLOGFile.WriteLine("Validating LOCK_SESSION_ID in the database: " & LOCK_SESSION_ID)
    On Error Resume Next
    sQuery = "SELECT COUNT(*) AS RecordCount FROM EAS_LOCKS WHERE LOCK_SESSION_ID = '" & LOCK_SESSION_ID & "'"
    Set rs = db.Execute(sQuery)
    If Err.Number <> 0 Then
        objLOGFile.WriteLine("Error: Database Issue - " & Err.Description)
        objLOGFile.Close
        WScript.Quit(1)
    End If
    On Error GoTo 0
    If Not rs.EOF And rs("RecordCount") > 0 Then
        objLOGFile.WriteLine("LOCK_SESSION_ID exists in the database. Executing delete query.")
        sQuery = "DELETE FROM EAS_LOCKS WHERE LOCK_SESSION_ID = '" & LOCK_SESSION_ID & "'"
        db.Execute(sQuery)
        objLOGFile.WriteLine("Delete query executed successfully.")
    Else
        objLOGFile.WriteLine("Error: LOCK_SESSION_ID is wrong!")
    End If
    rs.Close
Else
    objLOGFile.WriteLine("No LOCK_SESSION_ID provided. Skipping delete query.")
End If

db.Close
objLOGFile.WriteLine("Script completed successfully.")
objLOGFile.Close

WScript.Quit(0)

Function ReadReg(RegPath)
    Dim objRegistry, Key
    Set objRegistry = CreateObject("Wscript.shell")
    Key = objRegistry.RegRead(RegPath)
    ReadReg = Key
End Function

Function ZeroFill(ByVal String, ByVal length)
    ZeroFill = Trim(String)
    Do While Len(ZeroFill) < length
        ZeroFill = "0" & ZeroFill
    Loop
End Function

Function BLANKFill(ByVal String, ByVal length)
    BLANKFill = Trim(String)
    Do While Len(BLANKFill) < length
        BLANKFill = " " & BLANKFill
    Loop
End Function
' Code end
