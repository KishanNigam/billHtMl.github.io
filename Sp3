DECLARE @PRIOR_PERIOD Varchar(10), 
        @CURRENT_PERIOD Varchar(10), 
        @PRIOR_PERIOD2 Varchar(10), 
        @BASIS1 VARCHAR(50), 
        @BASIS2 VARCHAR(50), 
        @COMPANY_CODE VARCHAR(50);

-- Assign values to the variables as needed
SET @PRIOR_PERIOD = '2000-01-31';  -- Example date
SET @CURRENT_PERIOD = '2024-06-30';  -- Example date
SET @PRIOR_PERIOD2 = '2024-01-31';  -- Example date
SET @BASIS1 = 'GAAPC';  -- Example basis code
SET @BASIS2 = 'STATC';  -- Example basis code
SET @COMPANY_CODE = 'BHSIC';  -- Example company code

-- Temporary table to hold the BU_CODE variables
DECLARE @BU_CODES TABLE (
    BU_TYPE VARCHAR(50),
    BU_CODE VARCHAR(50)
);

-- Insert the required BU_CODE variables into the table
INSERT INTO @BU_CODES (BU_TYPE, BU_CODE)
VALUES 
    ('SEG', 'SEG'),
    ('AGENT', 'AGENT'),
    ('CLASS', 'CLASS'),
    ('REINS', 'REINS'),
    ('AFFIL', 'AFFIL'),
    ('EXPG', 'EXPG');

WITH BU_SET_DETAILS AS (
    SELECT 
        BD.BU_SET_ID,
        MAX(CASE WHEN SD.BU_TYPE = 'SEG' THEN ISNULL(SD.BU_CODE, (SELECT BU_CODE FROM @BU_CODES WHERE BU_TYPE = 'SEG')) END) AS SEG,
        MAX(CASE WHEN SD.BU_TYPE = 'AGENT' THEN ISNULL(SD.BU_CODE, (SELECT BU_CODE FROM @BU_CODES WHERE BU_TYPE = 'AGENT')) END) AS AGENT,
        MAX(CASE WHEN SD.BU_TYPE = 'CLASS' THEN ISNULL(SD.BU_CODE, (SELECT BU_CODE FROM @BU_CODES WHERE BU_TYPE = 'CLASS')) END) AS CLASS,
        MAX(CASE WHEN SD.BU_TYPE = 'REINS' THEN ISNULL(SD.BU_CODE, (SELECT BU_CODE FROM @BU_CODES WHERE BU_TYPE = 'REINS')) END) AS REINS,
        MAX(CASE WHEN SD.BU_TYPE = 'AFFIL' THEN ISNULL(SD.BU_CODE, (SELECT BU_CODE FROM @BU_CODES WHERE BU_TYPE = 'AFFIL')) END) AS AFFIL,
        MAX(CASE WHEN SD.BU_TYPE = 'EXPG' THEN ISNULL(SD.BU_CODE, (SELECT BU_CODE FROM @BU_CODES WHERE BU_TYPE = 'EXPG')) END) AS EXPG
    FROM 
        [REPL_EAS].[dbo].BSTRN_DETAIL BD
        LEFT OUTER JOIN [REPL_EAS].[dbo].BU_SET_DETAILS SD ON BD.BU_SET_ID = SD.BU_SET_ID
    GROUP BY 
        BD.BU_SET_ID
)

SELECT 
    BD.CAL_ACCTG_PERIOD, 
    BD.COMPANY_CODE,
    BD.ACCOUNT_NUMBER,
    AC.DESCRIPTION, 
    BSD.SEG,
    BSD.AGENT,
    BSD.CLASS,
    BSD.REINS,
    BSD.AFFIL,
    BSD.EXPG,
    SUM(BD.CONVERTED_AMOUNT) AS 'BALANCE', 
    BH.STATUS_CODE,
    A.ACCTG_BASIS_CODE

FROM   
    [REPL_EAS].[dbo].BSTRN_HEADER BH 
    INNER JOIN [REPL_EAS].[dbo].BSTRN_DETAIL BD ON BH.TRAN_ID = BD.TRAN_ID 
    LEFT OUTER JOIN [REPL_EAS].[dbo].AP_BSTRN_HEADER AP ON BH.TRAN_ID = AP.TRAN_ID 
    INNER JOIN [REPL_EAS].[dbo].ACCT_BAS_ACCT_BAS A ON BD.ACCTG_BASIS_CODE = A.REL_ACCT_BAS_CODE
    LEFT OUTER JOIN BU_SET_DETAILS BSD ON BD.BU_SET_ID = BSD.BU_SET_ID
    FULL OUTER JOIN [REPL_EAS].[dbo].ACCOUNT AC ON BD.ACCOUNT_NUMBER = AC.ACCT_NUMBER AND BD.COMPANY_CODE = AC.COMPANY_CODE

WHERE   
    (BD.CAL_ACCTG_PERIOD BETWEEN @PRIOR_PERIOD AND @CURRENT_PERIOD AND A.ACCTG_BASIS_CODE IN (@BASIS1, @BASIS2) AND BD.COMPANY_CODE = @COMPANY_CODE AND AC.ACCT_CLASS_IND IN ('A', 'L', 'S', 'E', 'G'))
    OR 
    (BD.CAL_ACCTG_PERIOD BETWEEN @PRIOR_PERIOD2 AND @CURRENT_PERIOD AND A.ACCTG_BASIS_CODE IN (@BASIS1, @BASIS2) AND BD.COMPANY_CODE = @COMPANY_CODE AND AC.ACCT_CLASS_IND IN ('I', 'X', 'F'))

GROUP BY
    BD.CAL_ACCTG_PERIOD, 
    BD.COMPANY_CODE,
    BD.ACCOUNT_NUMBER,
    AC.DESCRIPTION,
    BSD.SEG,
    BSD.AGENT,
    BSD.CLASS,
    BSD.REINS,
    BSD.AFFIL,
    BSD.EXPG,
    BH.STATUS_CODE,
    A.ACCTG_BASIS_CODE

ORDER BY 
    BD.ACCOUNT_NUMBER,
    BD.CAL_ACCTG_PERIOD;
